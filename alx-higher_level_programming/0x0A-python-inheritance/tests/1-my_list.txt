Check for import of the module:
	>>> MyList = __import__('1-my_list').MyList
	
Check for module docstring:
	>>> mod = __import__("1-my_list").__doc__
	>>> len(mod) > 1
	True

Check for class docstring:
	>>> c = __import__("1-my_list").MyList.__doc__
	>>> len(c) > 1
	True
	
Check for method docstring:
	>>> met = __import__("1-my_list").MyList.print_sorted.__doc__
	>>> len(met) > 1
	True

Check that MyList inherits from list:
	>>> issubclass(MyList, list)
	True

Check for an empty list
	>>> l = MyList()
	>>> l.print_sorted()
	[]

Check for list append:
	  >>> l.append(1)
	  >>> l.append(2)
	  >>> l.append(3)
	  >>> l.append(4)
	  >>> print(l)
	  [1, 2, 3, 4]

Checking for list already in correct order:
	  >>> l.print_sorted()
	  [1, 2, 3, 4]

Checking for reversed order list:
	  >>> l = MyList()
	  >>> l.append(4)
	  >>> l.append(3)
	  >>> l.append(2)
	  >>> l.append(1)
	  >>> print(l)
	  [4, 3, 2, 1]
	  >>> l.print_sorted()
	  [1, 2, 3, 4]
	  >>> print(l)
	  [4, 3, 2, 1]

Checking for one negative number:
	  >>> l.append(-1)
	  >>> l.append(5)
	  >>> print(l)
	  [4, 3, 2, 1, -1, 5]
	  >>> l.print_sorted()
	  [-1, 1, 2, 3, 4, 5]
	  >>> print(l)
	  [4, 3, 2, 1, -1, 5]

Checking for too many arguments:
	  >>> l.print_sorted(1)
	  Traceback (most recent call last):
	  TypeError: print_sorted() takes 1 positional argument but 2 were given